.gallery {
	--gallery--gap: var( --spacing--6 );
	gap: var( --gallery--gap );
	list-style-type: none;
	padding: 0;

	&--flex {
		display: flex;
		flex-wrap: wrap;
	}

	&--grid {
		display: grid;
	}

	// Stacked galleries should have spacing equal to gap.
	+ .gallery { margin-top: var( --gallery--gap ); }

	&.stretch-full { padding: 0 var( --gallery--gap ); }

	// The wrapper for individual gallery images/figures.
	> * {
		width:           100%;
		height:          100%; // wasn't in the flex, test.
		display:         flex;
		flex-grow:       1;
		flex-direction:  column;
		justify-content: center;
		position:        relative;
		margin:          0;
		padding:         0;
	}

	// Flex columns.
	&--flex {
		@media ( min-width: $breakpoint-base ), print {
			&.columns-2 > *,
			&.columns-3 > *,
			&.columns-4 > *,
			&.columns-5 > *,
			&.columns-6 > * { width: calc( 100% / 2 - var( --gallery--gap ) ); }
		}

		@media ( min-width: $breakpoint-lg ), print {
			&.columns-3 > *,
			&.columns-4 > *,
			&.columns-5 > *,
			&.columns-6 > * { width: calc( 100% / 3 - var( --gallery--gap ) ); }
		}

		@media ( min-width: $breakpoint-xl ), print {
			&.columns-4 > * { width: calc( 100% / 4 - var( --gallery--gap ) ); }
			&.columns-5 > * { width: calc( 100% / 5 - var( --gallery--gap ) ); }
			&.columns-6 > * { width: calc( 100% / 6 - var( --gallery--gap ) ); }
		}
	}

	// Grid columns.
	&--grid {
		grid-template-columns: repeat( 1, 1fr );

		@media ( min-width: $breakpoint-base ), print {
			&.columns-2,
			&.columns-3,
			&.columns-4,
			&.columns-5,
			&.columns-6 { grid-template-columns: repeat( 2, 1fr ); }
		}

		@media ( min-width: $breakpoint-lg ), print {
			&.columns-3,
			&.columns-4,
			&.columns-5,
			&.columns-6 { grid-template-columns: repeat( 3, 1fr ); }
		}

		@media ( min-width: $breakpoint-xl ), print {
			&.columns-4 { grid-template-columns: repeat( 4, 1fr ); }
			&.columns-5 { grid-template-columns: repeat( 5, 1fr ); }
			&.columns-6 { grid-template-columns: repeat( 6, 1fr ); }
		}
	}

	figure {
		display:         flex;
		align-items:     flex-end;
		justify-content: flex-start;
		margin:          0;
		height:          100%;

		img {
			display:   block;
			max-width: 100%;
			height:    auto;
			width:     auto;
		}
	}

	figcaption {
		position:   absolute;
		bottom:     0;
		width:      100%;
		max-height: 100%;
		padding:    40px var( --spacing--2 ) var( --spacing--2 );
		text-shadow: 0 1px $neutral-900;
		color:      $white;
		background: linear-gradient(
			0deg,
			rgba( 0, 0, 0, 0.7 ) 0,
			rgba( 0, 0, 0, 0.3 ) 60%,
			transparent
		);
		border-radius: 3px;

		a {
			color: inherit;
		}

		a:hover,
		a:focus {
			color:      $white;
			background: rgba( 255, 255, 255, 0.2 );
		}
	}

	a,
	img {
		flex:       1;
		width:      100%;
		height:     100%;
		object-fit: cover;
	}
}
